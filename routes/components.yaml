components:
 schemas:
     Cart:
         type: object
         required:
             - userId
         properties:
             userId:
                 type: integer
                 description: Numeric id of the user who the cart belongs to
             createdAt:
                 type: string
                 format: date-time
                 description: Date-time the cart was created
             updatedAt:
                 type: string
                 format: date-time
                 description: Date-time the cart was lastly updated
             cartItems:
                 type: array
                 items:
                   $ref: '#/components/schemas/CartItem'
         example:
             userId: 2
             createdAt: 2023-01-25 14:09:46.881
             updatedAt: 2023-01-25 14:09:46.881
     CartItem:
         type: object
         required:
             - quantity
             - price
             - cartId
             - productId
         properties:
             quantity:
                 type: integer
                 description: Quantity of the cart item in a specific cart
             price:
                 type: string
                 description: Price of the cart item
             cartId:
                 type: integer
                 description: Numeric id of the cart the item belongs to
             productId:
                 type: integer
                 description: Numeric id of the product the cartItem represents
             createdAt:
                 type: string
                 format: date-time
                 description: Date-time the cartItem was created
             updatedAt:
                 type: string
                 format: date-time
                 description: Date-time the cartItem was lastly updated
         example:
             quantity: 2
             price: 12.99
             cartId: 1
             productId: 2
             createdAt: 2023-01-25 14:09:46.881
             updatedAt: 2023-01-25 14:09:46.881
     User:
         type: object
         required:
             - email
             - password
         properties:
             email:
                 type: string
                 format: email
                 description: Email for the user, must be unique
             password:
                 type: string
                 format: password
                 description: Password has to have at minimum 8 characters with one lowercase letter, one uppercase letter, one number and one special character
             createdAt:
                 type: string
                 format: date-time
                 description: Date-time the user was created
             updatedAt:
                 type: string
                 format: date-time
                 description: Date-time the user was lastly updated
             orders:
                 type: array
                 items:
                    $ref: 'orders.ts#/components/schemas/Order'
         example:
             email: testuser@test.com
             password: P4$sword
             createdAt: 2023-01-25 14:09:46.881
             updatedAt: 2023-01-25 14:09:46.881
 securitySchemes:
     bearerAuth:
         type: http
         scheme: bearer
         bearerFormat: JWT
