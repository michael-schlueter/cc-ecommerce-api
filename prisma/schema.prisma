// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  price       String
  image       String
  categories  Category[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  cartItem    CartItem[]
  orderItem   OrderItem?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  firstName     String
  lastName      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  cart          Cart?
  order         Order[]
  refreshTokens RefreshToken[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int        @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cartItem  CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  price     String
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int      
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([cartId, productId])
}

model Order {
  id        Int         @id @default(autoincrement())
  total     Decimal
  status    String
  userId    Int
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderItem OrderItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId Int      @unique
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      Int
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
